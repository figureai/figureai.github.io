{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[],"Cache":[{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1584414668132},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1584414668133},{"_id":"themes/pure/_config.yml","hash":"a0b4959e481a71728cbacb382d1b5fab016d810f","modified":1584790524859},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1584414668133},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1584414668133},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1584414668134},{"_id":"themes/pure/package.json","hash":"a61723eead5cae2c4d9f0f05cf40d2de7c286fee","modified":1584414668155},{"_id":"source/.DS_Store","hash":"887ad5fafe05e1433a1095f46a5e43cc54490f04","modified":1584416247222},{"_id":"source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1584697887795},{"_id":"source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1584455723537},{"_id":"source/_posts/GitHub高效搜索方式.md","hash":"d39597be12c5677b7afeba5b94cacfa51dc8972f","modified":1584751730728},{"_id":"source/_posts/关于js的this指针.md","hash":"a2241606458122d81c47023005a2e9765c71ede2","modified":1584933910292},{"_id":"source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1584455723537},{"_id":"source/about/index.md","hash":"abda26dcc68a9991d5ffa6ca621a4ab4b8195650","modified":1584702596856},{"_id":"source/_posts/正则表达式的基本使用.md","hash":"7ed7dd78308ff332a00491fd8c0b893d126e46ba","modified":1584705124257},{"_id":"source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1584459403514},{"_id":"source/books/index.md","hash":"10448b4f13f03b681c26fe43bd94d53e9c8e48e0","modified":1584697877673},{"_id":"source/links/index.md","hash":"a1e612897fb6e0ddff25c92fef8352beddfd3080","modified":1584697899625},{"_id":"source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1584455723543},{"_id":"source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1584455723543},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1584414668152},{"_id":"themes/pure/layout/archive.ejs","hash":"ded5d953b35666e30f4c6e48e2d2c62af8d95ebf","modified":1584414668153},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1584414668153},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1584414668153},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1584414668154},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1584414668153},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1584414668154},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1584414668154},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1584414668154},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1584414668155},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1584414668137},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1584414668154},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1584414668138},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1584414668138},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1584414668138},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1584414668155},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1584414668153},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1584414668178},{"_id":"themes/pure/source/favicon.png","hash":"d39cad98d4c3baa0de774ddd735fba92f9617c92","modified":1584697265225},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1584414668160},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1584414668157},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1584414668162},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1584414668159},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1584414668135},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1584414668135},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1584414668134},{"_id":"themes/pure/_source/about/index.md","hash":"ba1739c1a7605a98d6ceaa4b44e87f3bd3ef2556","modified":1584685428010},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1584414668136},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1584414668136},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1584414668137},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1584414668136},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1584414668137},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1584414668139},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1584414668140},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1584414668140},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1584414668140},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"c66c86d6a6a90e00494c380603426fc0f4006311","modified":1584414668140},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1584414668140},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1584414668141},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1584414668141},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1584414668141},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"9f755b0da1ea928dece32c2050d8a04b3a9fb13b","modified":1584414668141},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"152538ceceb0fdef65c46470ebf0189f7b891c5b","modified":1584414668145},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"41a319642da5af07d6cfb8525796aa610b721879","modified":1584414668142},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1584414668141},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"e10ea0176ba87e64888234bafedc01c92544352c","modified":1584414668145},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1584414668145},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1584414668138},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1584414668139},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1584414668139},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1584414668139},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1584414668139},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1584414668150},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1584414668150},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1584414668151},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1584414668151},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1584414668151},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1584414668149},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1584414668148},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"143087db0573772b0bdaf7f93312553158942ec7","modified":1584414668149},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1584414668149},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1584414668149},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1584414668150},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"14f2e7d4c1055ff6a5f5867dc0e9a9f6f4c28fe1","modified":1584414668150},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1584414668150},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1584414668151},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1584414668152},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1584414668152},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1584414668152},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1584414668152},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1584414668152},{"_id":"themes/pure/source/images/avatar.jpg","hash":"d39cad98d4c3baa0de774ddd735fba92f9617c92","modified":1584697208653},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1584414668187},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1584414668188},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1584414668182},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1584414668185},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1584414668189},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1584414668182},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1584414668185},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1584414668188},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1584414668189},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1584414668190},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1584414668193},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1584414668142},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"a9d3d05428e5844a07706c7fcfeb842e44a36a64","modified":1584414668143},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1584414668142},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1584414668143},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1584414668143},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"95eabc0fe4033ec61b240a16eeaf7dc62a9e3da1","modified":1584414668144},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1584414668143},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1584414668144},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1584414668144},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1584414668144},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1584414668144},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1584414668144},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1584414668146},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1584414668146},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1584414668146},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1584414668146},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"fb01f1631c3ae7fe6211dc03233506cb344229be","modified":1584414668147},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1584414668147},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1584414668147},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1584414668148},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1584414668148},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1584414668148},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1584414668148},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1584414668187},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1584414668187},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1584414668187},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1584414668192},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1584414668191},{"_id":"themes/pure/source/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1584414668180},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1584414668181},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1584414668184},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1584414668163},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"f16440d9d71989ec5e9ff7cb6ebc9119fd7c22bf","modified":1584684848463},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"3edf95f56d81fa3f872af2ad525ea10b8246ea87","modified":1584684848860},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1584414668177},{"_id":"public/baidusitemap.xml","hash":"cd75de16e03033b5da6158a24ae28d77f43e3c06","modified":1584957782993},{"_id":"public/atom.xml","hash":"43f403bac9193a8a35810b357bc5b6ff97ae78f9","modified":1584957782993},{"_id":"public/content.json","hash":"ecdab1417d4dde10ffee1c439ad3f13db36f18e1","modified":1584957782993},{"_id":"public/sitemap.xml","hash":"e29aa303177da823bb690992fbabf95eb3ca786c","modified":1584957782993},{"_id":"public/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/links/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/repository/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/archives/2020/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/archives/2020/03/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/categories/高效操作/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/categories/JavaScript/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/categories/编程通用/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/tags/github/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/tags/效率/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/tags/基础/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/404.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/books/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/2020/03/23/关于js的this指针/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/2020/03/21/GitHub高效搜索方式/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/2020/03/20/正则表达式的基本使用/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1584957782993},{"_id":"public/favicon.png","hash":"d39cad98d4c3baa0de774ddd735fba92f9617c92","modified":1584957602275},{"_id":"public/images/avatar.jpg","hash":"d39cad98d4c3baa0de774ddd735fba92f9617c92","modified":1584957602275},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1584957602275},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1584957602275},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1584957602275},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1584957602275},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1584957602275},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1584957602275},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1584957602275},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1584957602275},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1584957602275},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1584957602275},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1584957602275},{"_id":"public/fonts/README.html","hash":"7c1128fed284d2fb7fee743e8a739da99385b358","modified":1584957602275},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1584957602275},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1584957602275},{"_id":"public/css/style.css","hash":"3b693ce41c2e35ece4773593e94b4c17aeaee02f","modified":1584957602275},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1584957602275},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1584957602275},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1584957602275},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1584957602275},{"_id":"public/images/donate/wechatpayimg.png","hash":"f16440d9d71989ec5e9ff7cb6ebc9119fd7c22bf","modified":1584957602275},{"_id":"public/images/donate/alipayimg.png","hash":"3edf95f56d81fa3f872af2ad525ea10b8246ea87","modified":1584957602275}],"Category":[{"name":"高效操作","_id":"ck84au18p0004m1rhaz3v0mky"},{"name":"JavaScript","_id":"ck84au18u0009m1rhh6bhbobv"},{"name":"编程通用","_id":"ck84au18x000cm1rh9u7961l9"}],"Data":[{"_id":"gallery","data":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}}},{"_id":"links","data":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}],"Page":[{"title":"404 Not Found：该页无法显示","toc":false,"comments":0,"_content":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","source":"404/index.md","raw":"---\ntitle: 404 Not Found：该页无法显示\ntoc: false\ncomments: false\npermalink: /404\n---\n<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","date":"2020-03-20T09:51:27.795Z","updated":"2020-03-20T09:51:27.795Z","path":"/404.html","layout":"page","_id":"ck84au18g0000m1rhgjrqd2pa","content":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<script type=\"text/javascript\" src=\"//www.qq.com/404/search_children.js\" charset=\"utf-8\" homePageUrl=\"<%- config.url %>\" homePageName=\"回到我的主页\"></script>\n"},{"title":"关于","description":"个人简介","layout":"about","comments":0,"sidebar":"custom","_content":" 我热爱的不是编程，我热爱的只是工作","source":"about/index.md","raw":"---\ntitle: 关于\ndescription: 个人简介\nlayout: about\ncomments: false\nsidebar: custom\n---\n 我热爱的不是编程，我热爱的只是工作","date":"2020-03-20T11:09:56.856Z","updated":"2020-03-20T11:09:56.856Z","path":"about/index.html","_id":"ck84au18n0002m1rh3oxvfwph","content":"<p> 我热爱的不是编程，我热爱的只是工作</p>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<p> 我热爱的不是编程，我热爱的只是工作</p>\n"},{"title":"分类","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\nlayout: categories\ncomments: false\n---\n","date":"2020-03-17T15:36:43.514Z","updated":"2020-03-17T15:36:43.514Z","path":"categories/index.html","_id":"ck84au18r0006m1rh0n912nxm","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"书单","layout":"books","comments":0,"sidebar":"none","_content":"\n","source":"books/index.md","raw":"---\ntitle: 书单\nlayout: books\ncomments: false\nsidebar: none\n---\n\n","date":"2020-03-20T09:51:17.673Z","updated":"2020-03-20T09:51:17.673Z","path":"books/index.html","_id":"ck84au18t0008m1rh6vpq09fv","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"友情链接","layout":"links","comments":1,"sidebar":"none","_content":"","source":"links/index.md","raw":"---\ntitle: 友情链接\nlayout: links\ncomments: true\nsidebar: none\n---\n","date":"2020-03-20T09:51:39.625Z","updated":"2020-03-20T09:51:39.625Z","path":"links/index.html","_id":"ck84au19p000jm1rh9mmn89hy","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"标签","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\nlayout: tags\ncomments: false\n---\n","date":"2020-03-17T14:35:23.543Z","updated":"2020-03-17T14:35:23.543Z","path":"tags/index.html","_id":"ck84au19q000km1rh33ul5suk","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""},{"title":"Repositories","layout":"repository","comments":0,"sidebar":"none","_content":"","source":"repository/index.md","raw":"---\ntitle: Repositories\nlayout: repository\ncomments: false\nsidebar: none\n---\n","date":"2020-03-17T14:35:23.543Z","updated":"2020-03-17T14:35:23.543Z","path":"repository/index.html","_id":"ck84au19r000lm1rh23i53m1s","content":"","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":""}],"Post":[{"title":"提高github搜索精确度","date":"2020-03-21T00:24:58.000Z","comments":1,"_content":"\n```\n// xxx 代表搜索内容\n// 在项目名进行精确搜索\nin:name xxx\n\n// 搜索名字包含xxx，stars数量大于3000的项目\nin:name xxx stars:>3000\n\n// 搜索名字包含xxx，forks大于100的项目\nin:name xxx forks:>100\n\n// 搜索readme包含xxx的项目\nin:readme xxx\n\n// 搜索描述包含xxx的项目\nin:description xxx\n\n// 搜索xxx语言编写，名字包含xxx的项目\nin:name xxx language:xxx\n\n// 搜索最后一次更细时间在2019年9月3日之后的项目\nxxx pushed:>2019-09-03\n\n// \n```","source":"_posts/GitHub高效搜索方式.md","raw":"---\ntitle: 提高github搜索精确度\ndate: 2020-03-21 08:24:58\ncategories: 高效操作\ntags: [github,效率]\ncomments: true\n---\n\n```\n// xxx 代表搜索内容\n// 在项目名进行精确搜索\nin:name xxx\n\n// 搜索名字包含xxx，stars数量大于3000的项目\nin:name xxx stars:>3000\n\n// 搜索名字包含xxx，forks大于100的项目\nin:name xxx forks:>100\n\n// 搜索readme包含xxx的项目\nin:readme xxx\n\n// 搜索描述包含xxx的项目\nin:description xxx\n\n// 搜索xxx语言编写，名字包含xxx的项目\nin:name xxx language:xxx\n\n// 搜索最后一次更细时间在2019年9月3日之后的项目\nxxx pushed:>2019-09-03\n\n// \n```","slug":"GitHub高效搜索方式","published":1,"updated":"2020-03-21T00:48:50.728Z","layout":"post","photos":[],"link":"","_id":"ck84au18k0001m1rh9djj2l13","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; xxx 代表搜索内容</span><br><span class=\"line\">&#x2F;&#x2F; 在项目名进行精确搜索</span><br><span class=\"line\">in:name xxx</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索名字包含xxx，stars数量大于3000的项目</span><br><span class=\"line\">in:name xxx stars:&gt;3000</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索名字包含xxx，forks大于100的项目</span><br><span class=\"line\">in:name xxx forks:&gt;100</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索readme包含xxx的项目</span><br><span class=\"line\">in:readme xxx</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索描述包含xxx的项目</span><br><span class=\"line\">in:description xxx</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索xxx语言编写，名字包含xxx的项目</span><br><span class=\"line\">in:name xxx language:xxx</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索最后一次更细时间在2019年9月3日之后的项目</span><br><span class=\"line\">xxx pushed:&gt;2019-09-03</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;</span><br></pre></td></tr></table></figure>","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; xxx 代表搜索内容</span><br><span class=\"line\">&#x2F;&#x2F; 在项目名进行精确搜索</span><br><span class=\"line\">in:name xxx</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索名字包含xxx，stars数量大于3000的项目</span><br><span class=\"line\">in:name xxx stars:&gt;3000</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索名字包含xxx，forks大于100的项目</span><br><span class=\"line\">in:name xxx forks:&gt;100</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索readme包含xxx的项目</span><br><span class=\"line\">in:readme xxx</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索描述包含xxx的项目</span><br><span class=\"line\">in:description xxx</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索xxx语言编写，名字包含xxx的项目</span><br><span class=\"line\">in:name xxx language:xxx</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 搜索最后一次更细时间在2019年9月3日之后的项目</span><br><span class=\"line\">xxx pushed:&gt;2019-09-03</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F;</span><br></pre></td></tr></table></figure>"},{"title":"关于js的this指向问题","date":"2020-03-23T03:17:10.000Z","comments":1,"_content":"\n# 关于js的this指向问题\n\n> 一直以来对于js的this指针这一块理解都是比较模糊，也有查阅过相关资料，但是时间一长又会忘记，所以这篇文章单独记录一下this指针的指向问题，一方面加深记忆，一方面也方便自己查阅\n\n## 要点\n\n> this的指向不是在函数定义的时候确定的，而是在函数调用的时候确定的，换句话说，函数的调用方式决定了this的指向\n","source":"_posts/关于js的this指针.md","raw":"---\ntitle: 关于js的this指向问题\ndate: 2020-03-23 11:17:10\ncategories: JavaScript\ntags: []\ncomments: true\n---\n\n# 关于js的this指向问题\n\n> 一直以来对于js的this指针这一块理解都是比较模糊，也有查阅过相关资料，但是时间一长又会忘记，所以这篇文章单独记录一下this指针的指向问题，一方面加深记忆，一方面也方便自己查阅\n\n## 要点\n\n> this的指向不是在函数定义的时候确定的，而是在函数调用的时候确定的，换句话说，函数的调用方式决定了this的指向\n","slug":"关于js的this指针","published":1,"updated":"2020-03-23T03:25:10.292Z","layout":"post","photos":[],"link":"","_id":"ck84au18n0003m1rhft6r2d3d","content":"<h1 id=\"关于js的this指向问题\"><a href=\"#关于js的this指向问题\" class=\"headerlink\" title=\"关于js的this指向问题\"></a>关于js的this指向问题</h1><blockquote>\n<p>一直以来对于js的this指针这一块理解都是比较模糊，也有查阅过相关资料，但是时间一长又会忘记，所以这篇文章单独记录一下this指针的指向问题，一方面加深记忆，一方面也方便自己查阅</p>\n</blockquote>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><blockquote>\n<p>this的指向不是在函数定义的时候确定的，而是在函数调用的时候确定的，换句话说，函数的调用方式决定了this的指向</p>\n</blockquote>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h1 id=\"关于js的this指向问题\"><a href=\"#关于js的this指向问题\" class=\"headerlink\" title=\"关于js的this指向问题\"></a>关于js的this指向问题</h1><blockquote>\n<p>一直以来对于js的this指针这一块理解都是比较模糊，也有查阅过相关资料，但是时间一长又会忘记，所以这篇文章单独记录一下this指针的指向问题，一方面加深记忆，一方面也方便自己查阅</p>\n</blockquote>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><blockquote>\n<p>this的指向不是在函数定义的时候确定的，而是在函数调用的时候确定的，换句话说，函数的调用方式决定了this的指向</p>\n</blockquote>\n"},{"title":"正则表达式的使用","date":"2020-03-20T06:53:45.000Z","comments":1,"_content":"\n\n\n# 正则表达式的使用\n> 本文整理了一些常用的正则表达式匹配符，使用的示例代码为js编写，参考文章 [正则表达式手册](https://tool.oschina.net/uploads/apidocs/jquery/regexp.html)，[MDN文档-正则表达式](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expression)\n\n## 正则表达式规则类型\n- 断言 \n    > 表示一个匹配在某些条件发生\n\n- 边界\n    > 表示行和单词的的开始和结尾，如：`^ 匹配起始位置` ，`$ 匹配结束位置`\n\n- 字符类别\n    > 区分不同类型的字符，如： `\\D 匹配一个非数字字符`，`\\d 匹配一个数字字符`\n\n- 组合范围\n    > 表示表达式的分组和范围，如: `[a-e0-4] 匹配a-e之间的字符以及0-4的数字`\n\n- 量词\n    > 表示匹配的字符或表达式的数量， 如： `a{3,4} 匹配3个或4个字母a的字符`\n\n- unicode属性转义\n    > 基于unicode字符属性区分字符\n\n\n## 常用的匹配规则\n> 以下列的是常用匹配规则，完整的匹配规则可参考：[正则表达式手册](https://tool.oschina.net/uploads/apidocs/jquery/regexp.html)\n\n ```\n \n \\S     : 匹配任意非空字符\n .      : 匹配 \\n 之外的任何字符\n \\D     : 匹配一个非数字字符，等价于[^0-9]\n \\d     : 匹配个数字字符，等价于[0-9]\n [0-9]  : 匹配一个数字字符\n ^      : 限定字符串的起始字符， 例如  ^a 限定匹配的字符串必须以 a 开头\n $      : 限定字符串的结束字符，例如 b$ 字符串必须以b结束\n\\w      : 匹配包括下划线的任何单词或数字，等价于[A-Za-z0-9_]\n{}      : 匹配指定次数，eg: a{3,6}，最低匹配三个字符a，最高匹配6个字符a\n()      : 优先匹配括号中的内容\n+       : 至少匹配一次，等价于{1,}\n\n ```\n\n ## 全局匹配模式\n> 全局匹配模式即在匹配到第一个字符串后，会继续往后检索，直到检索完所有内容\n\n```\nconst str = '123bb456bb789'\n\n// 输出 [ 'bb', 'bb' ]\nconsole.log(str.match(/bb/g)) \n\nconst reg = new RegExp(\"bb\",\"g\")\n// 输出 [ 'bb', index: 3, input: '123bb4567bb89', groups: undefined ]\nconsole.log(reg.exec(str))\n\n```\n\n\n ## js 字符串支持正则表达式的方法\n\n ```\nconst str = '123bb456d789'\n\n// search(reg): 检索与reg相匹配的值\n// 输出： 3\nconsole.log(str.search(/b{2}/))  \n\n// match(reg): 找到一个或多个reg匹配的值\n// 输出： [ '456', index: 5, input: '123bb456d789', groups: undefined ]\nconsole.log(str.match(/[4-6]{3}/))\n\n// replace(reg, str): 替换与reg匹配的值为str的内容\n// 输出： 123bb4561119\nconsole.log(str.replace(/d[7-8]{2}/, '111'))\n\n// split(reg, number): 把字符依照reg匹配规则分割，并且返回一个number长度的数组\n// 输出： [ '123bb', 'd789' ]\nconsole.log(str.split(/456/, 2))\n\n ```\n\n## js RegExp对象\n\n```\ncomplie: 编译正则表达式。\nexec: 检索字符串中指定的值。返回找到的值，并确定其位置。\ntest: 检索字符串中指定的值。返回 true 或 false。\n```\n\n\n## 常用的正则表达式\n\n```\n// 获取网络链接中的某个参数值\n// gcGetUrlParam（url,params） {\n//     var reg = new RegExp(\"(^|&)\" + params + \"=([^&]*)(&|$)\");\n//     var result = url.search.substr(1).match(reg);\n//     if (result && result[2]) {\n//         return result[2];\n//     }\n//     return false;\n// }\n\n// 裁剪xx到xx之间的任意内容\n// let url = https://www.v.qq.com/?vid=adfadsfds2243&test=true\n// let reg = /vid=(.*?)&/\n// let vid = url.match(reg)[1]\n\n// 验证手机号码正则\n// let reg = /^1([3-8])(\\d{9})$/\n// let test = '13160694978'\n// let a = reg.exec(test)\n// console.log(a)\n\n// 验证邮箱的正则\n// let reg = /^((\\S|_|-){2,10})@(\\S{2,6})(.com)$/\n// let test = 'some_one@gmail.com'\n// let a = reg.exec(test)\n// console.log(a)\n\n// 匹配任意重复字符\n// var s = 'aaabccc11fdsaa';\n// var reg = /(.)\\1+/g;\n// console.log(s.match(reg)); //[\"aaa\", \"ccc\", \"11\"]\n```\n ","source":"_posts/正则表达式的基本使用.md","raw":"---\ntitle: 正则表达式的使用\ndate: 2020-03-20 14:53:45\ncategories: 编程通用\ntags: [基础]\ncomments: true\n---\n\n\n\n# 正则表达式的使用\n> 本文整理了一些常用的正则表达式匹配符，使用的示例代码为js编写，参考文章 [正则表达式手册](https://tool.oschina.net/uploads/apidocs/jquery/regexp.html)，[MDN文档-正则表达式](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expression)\n\n## 正则表达式规则类型\n- 断言 \n    > 表示一个匹配在某些条件发生\n\n- 边界\n    > 表示行和单词的的开始和结尾，如：`^ 匹配起始位置` ，`$ 匹配结束位置`\n\n- 字符类别\n    > 区分不同类型的字符，如： `\\D 匹配一个非数字字符`，`\\d 匹配一个数字字符`\n\n- 组合范围\n    > 表示表达式的分组和范围，如: `[a-e0-4] 匹配a-e之间的字符以及0-4的数字`\n\n- 量词\n    > 表示匹配的字符或表达式的数量， 如： `a{3,4} 匹配3个或4个字母a的字符`\n\n- unicode属性转义\n    > 基于unicode字符属性区分字符\n\n\n## 常用的匹配规则\n> 以下列的是常用匹配规则，完整的匹配规则可参考：[正则表达式手册](https://tool.oschina.net/uploads/apidocs/jquery/regexp.html)\n\n ```\n \n \\S     : 匹配任意非空字符\n .      : 匹配 \\n 之外的任何字符\n \\D     : 匹配一个非数字字符，等价于[^0-9]\n \\d     : 匹配个数字字符，等价于[0-9]\n [0-9]  : 匹配一个数字字符\n ^      : 限定字符串的起始字符， 例如  ^a 限定匹配的字符串必须以 a 开头\n $      : 限定字符串的结束字符，例如 b$ 字符串必须以b结束\n\\w      : 匹配包括下划线的任何单词或数字，等价于[A-Za-z0-9_]\n{}      : 匹配指定次数，eg: a{3,6}，最低匹配三个字符a，最高匹配6个字符a\n()      : 优先匹配括号中的内容\n+       : 至少匹配一次，等价于{1,}\n\n ```\n\n ## 全局匹配模式\n> 全局匹配模式即在匹配到第一个字符串后，会继续往后检索，直到检索完所有内容\n\n```\nconst str = '123bb456bb789'\n\n// 输出 [ 'bb', 'bb' ]\nconsole.log(str.match(/bb/g)) \n\nconst reg = new RegExp(\"bb\",\"g\")\n// 输出 [ 'bb', index: 3, input: '123bb4567bb89', groups: undefined ]\nconsole.log(reg.exec(str))\n\n```\n\n\n ## js 字符串支持正则表达式的方法\n\n ```\nconst str = '123bb456d789'\n\n// search(reg): 检索与reg相匹配的值\n// 输出： 3\nconsole.log(str.search(/b{2}/))  \n\n// match(reg): 找到一个或多个reg匹配的值\n// 输出： [ '456', index: 5, input: '123bb456d789', groups: undefined ]\nconsole.log(str.match(/[4-6]{3}/))\n\n// replace(reg, str): 替换与reg匹配的值为str的内容\n// 输出： 123bb4561119\nconsole.log(str.replace(/d[7-8]{2}/, '111'))\n\n// split(reg, number): 把字符依照reg匹配规则分割，并且返回一个number长度的数组\n// 输出： [ '123bb', 'd789' ]\nconsole.log(str.split(/456/, 2))\n\n ```\n\n## js RegExp对象\n\n```\ncomplie: 编译正则表达式。\nexec: 检索字符串中指定的值。返回找到的值，并确定其位置。\ntest: 检索字符串中指定的值。返回 true 或 false。\n```\n\n\n## 常用的正则表达式\n\n```\n// 获取网络链接中的某个参数值\n// gcGetUrlParam（url,params） {\n//     var reg = new RegExp(\"(^|&)\" + params + \"=([^&]*)(&|$)\");\n//     var result = url.search.substr(1).match(reg);\n//     if (result && result[2]) {\n//         return result[2];\n//     }\n//     return false;\n// }\n\n// 裁剪xx到xx之间的任意内容\n// let url = https://www.v.qq.com/?vid=adfadsfds2243&test=true\n// let reg = /vid=(.*?)&/\n// let vid = url.match(reg)[1]\n\n// 验证手机号码正则\n// let reg = /^1([3-8])(\\d{9})$/\n// let test = '13160694978'\n// let a = reg.exec(test)\n// console.log(a)\n\n// 验证邮箱的正则\n// let reg = /^((\\S|_|-){2,10})@(\\S{2,6})(.com)$/\n// let test = 'some_one@gmail.com'\n// let a = reg.exec(test)\n// console.log(a)\n\n// 匹配任意重复字符\n// var s = 'aaabccc11fdsaa';\n// var reg = /(.)\\1+/g;\n// console.log(s.match(reg)); //[\"aaa\", \"ccc\", \"11\"]\n```\n ","slug":"正则表达式的基本使用","published":1,"updated":"2020-03-20T11:52:04.257Z","layout":"post","photos":[],"link":"","_id":"ck84au18r0007m1rh1wrt2epk","content":"<h1 id=\"正则表达式的使用\"><a href=\"#正则表达式的使用\" class=\"headerlink\" title=\"正则表达式的使用\"></a>正则表达式的使用</h1><blockquote>\n<p>本文整理了一些常用的正则表达式匹配符，使用的示例代码为js编写，参考文章 <a href=\"https://tool.oschina.net/uploads/apidocs/jquery/regexp.html\" target=\"_blank\" rel=\"noopener\">正则表达式手册</a>，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expression\" target=\"_blank\" rel=\"noopener\">MDN文档-正则表达式</a></p>\n</blockquote>\n<h2 id=\"正则表达式规则类型\"><a href=\"#正则表达式规则类型\" class=\"headerlink\" title=\"正则表达式规则类型\"></a>正则表达式规则类型</h2><ul>\n<li><p>断言 </p>\n<blockquote>\n<p>表示一个匹配在某些条件发生</p>\n</blockquote>\n</li>\n<li><p>边界</p>\n<blockquote>\n<p>表示行和单词的的开始和结尾，如：<code>^ 匹配起始位置</code> ，<code>$ 匹配结束位置</code></p>\n</blockquote>\n</li>\n<li><p>字符类别</p>\n<blockquote>\n<p>区分不同类型的字符，如： <code>\\D 匹配一个非数字字符</code>，<code>\\d 匹配一个数字字符</code></p>\n</blockquote>\n</li>\n<li><p>组合范围</p>\n<blockquote>\n<p>表示表达式的分组和范围，如: <code>[a-e0-4] 匹配a-e之间的字符以及0-4的数字</code></p>\n</blockquote>\n</li>\n<li><p>量词</p>\n<blockquote>\n<p>表示匹配的字符或表达式的数量， 如： <code>a{3,4} 匹配3个或4个字母a的字符</code></p>\n</blockquote>\n</li>\n<li><p>unicode属性转义</p>\n<blockquote>\n<p>基于unicode字符属性区分字符</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"常用的匹配规则\"><a href=\"#常用的匹配规则\" class=\"headerlink\" title=\"常用的匹配规则\"></a>常用的匹配规则</h2><blockquote>\n<p>以下列的是常用匹配规则，完整的匹配规则可参考：<a href=\"https://tool.oschina.net/uploads/apidocs/jquery/regexp.html\" target=\"_blank\" rel=\"noopener\">正则表达式手册</a></p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"> \\S     : 匹配任意非空字符</span><br><span class=\"line\"> .      : 匹配 \\n 之外的任何字符</span><br><span class=\"line\"> \\D     : 匹配一个非数字字符，等价于[^0-9]</span><br><span class=\"line\"> \\d     : 匹配个数字字符，等价于[0-9]</span><br><span class=\"line\"> [0-9]  : 匹配一个数字字符</span><br><span class=\"line\"> ^      : 限定字符串的起始字符， 例如  ^a 限定匹配的字符串必须以 a 开头</span><br><span class=\"line\"> $      : 限定字符串的结束字符，例如 b$ 字符串必须以b结束</span><br><span class=\"line\">\\w      : 匹配包括下划线的任何单词或数字，等价于[A-Za-z0-9_]</span><br><span class=\"line\">&#123;&#125;      : 匹配指定次数，eg: a&#123;3,6&#125;，最低匹配三个字符a，最高匹配6个字符a</span><br><span class=\"line\">()      : 优先匹配括号中的内容</span><br><span class=\"line\">+       : 至少匹配一次，等价于&#123;1,&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"全局匹配模式\"><a href=\"#全局匹配模式\" class=\"headerlink\" title=\"全局匹配模式\"></a>全局匹配模式</h2><blockquote>\n<p>全局匹配模式即在匹配到第一个字符串后，会继续往后检索，直到检索完所有内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const str &#x3D; &#39;123bb456bb789&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 输出 [ &#39;bb&#39;, &#39;bb&#39; ]</span><br><span class=\"line\">console.log(str.match(&#x2F;bb&#x2F;g)) </span><br><span class=\"line\"></span><br><span class=\"line\">const reg &#x3D; new RegExp(&quot;bb&quot;,&quot;g&quot;)</span><br><span class=\"line\">&#x2F;&#x2F; 输出 [ &#39;bb&#39;, index: 3, input: &#39;123bb4567bb89&#39;, groups: undefined ]</span><br><span class=\"line\">console.log(reg.exec(str))</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"js-字符串支持正则表达式的方法\"><a href=\"#js-字符串支持正则表达式的方法\" class=\"headerlink\" title=\"js 字符串支持正则表达式的方法\"></a>js 字符串支持正则表达式的方法</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const str &#x3D; &#39;123bb456d789&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; search(reg): 检索与reg相匹配的值</span><br><span class=\"line\">&#x2F;&#x2F; 输出： 3</span><br><span class=\"line\">console.log(str.search(&#x2F;b&#123;2&#125;&#x2F;))  </span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; match(reg): 找到一个或多个reg匹配的值</span><br><span class=\"line\">&#x2F;&#x2F; 输出： [ &#39;456&#39;, index: 5, input: &#39;123bb456d789&#39;, groups: undefined ]</span><br><span class=\"line\">console.log(str.match(&#x2F;[4-6]&#123;3&#125;&#x2F;))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; replace(reg, str): 替换与reg匹配的值为str的内容</span><br><span class=\"line\">&#x2F;&#x2F; 输出： 123bb4561119</span><br><span class=\"line\">console.log(str.replace(&#x2F;d[7-8]&#123;2&#125;&#x2F;, &#39;111&#39;))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; split(reg, number): 把字符依照reg匹配规则分割，并且返回一个number长度的数组</span><br><span class=\"line\">&#x2F;&#x2F; 输出： [ &#39;123bb&#39;, &#39;d789&#39; ]</span><br><span class=\"line\">console.log(str.split(&#x2F;456&#x2F;, 2))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"js-RegExp对象\"><a href=\"#js-RegExp对象\" class=\"headerlink\" title=\"js RegExp对象\"></a>js RegExp对象</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">complie: 编译正则表达式。</span><br><span class=\"line\">exec: 检索字符串中指定的值。返回找到的值，并确定其位置。</span><br><span class=\"line\">test: 检索字符串中指定的值。返回 true 或 false。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"常用的正则表达式\"><a href=\"#常用的正则表达式\" class=\"headerlink\" title=\"常用的正则表达式\"></a>常用的正则表达式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 获取网络链接中的某个参数值</span><br><span class=\"line\">&#x2F;&#x2F; gcGetUrlParam（url,params） &#123;</span><br><span class=\"line\">&#x2F;&#x2F;     var reg &#x3D; new RegExp(&quot;(^|&amp;)&quot; + params + &quot;&#x3D;([^&amp;]*)(&amp;|$)&quot;);</span><br><span class=\"line\">&#x2F;&#x2F;     var result &#x3D; url.search.substr(1).match(reg);</span><br><span class=\"line\">&#x2F;&#x2F;     if (result &amp;&amp; result[2]) &#123;</span><br><span class=\"line\">&#x2F;&#x2F;         return result[2];</span><br><span class=\"line\">&#x2F;&#x2F;     &#125;</span><br><span class=\"line\">&#x2F;&#x2F;     return false;</span><br><span class=\"line\">&#x2F;&#x2F; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 裁剪xx到xx之间的任意内容</span><br><span class=\"line\">&#x2F;&#x2F; let url &#x3D; https:&#x2F;&#x2F;www.v.qq.com&#x2F;?vid&#x3D;adfadsfds2243&amp;test&#x3D;true</span><br><span class=\"line\">&#x2F;&#x2F; let reg &#x3D; &#x2F;vid&#x3D;(.*?)&amp;&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; let vid &#x3D; url.match(reg)[1]</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 验证手机号码正则</span><br><span class=\"line\">&#x2F;&#x2F; let reg &#x3D; &#x2F;^1([3-8])(\\d&#123;9&#125;)$&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; let test &#x3D; &#39;13160694978&#39;</span><br><span class=\"line\">&#x2F;&#x2F; let a &#x3D; reg.exec(test)</span><br><span class=\"line\">&#x2F;&#x2F; console.log(a)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 验证邮箱的正则</span><br><span class=\"line\">&#x2F;&#x2F; let reg &#x3D; &#x2F;^((\\S|_|-)&#123;2,10&#125;)@(\\S&#123;2,6&#125;)(.com)$&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; let test &#x3D; &#39;some_one@gmail.com&#39;</span><br><span class=\"line\">&#x2F;&#x2F; let a &#x3D; reg.exec(test)</span><br><span class=\"line\">&#x2F;&#x2F; console.log(a)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 匹配任意重复字符</span><br><span class=\"line\">&#x2F;&#x2F; var s &#x3D; &#39;aaabccc11fdsaa&#39;;</span><br><span class=\"line\">&#x2F;&#x2F; var reg &#x3D; &#x2F;(.)\\1+&#x2F;g;</span><br><span class=\"line\">&#x2F;&#x2F; console.log(s.match(reg)); &#x2F;&#x2F;[&quot;aaa&quot;, &quot;ccc&quot;, &quot;11&quot;]</span><br></pre></td></tr></table></figure>\n","site":{"data":{"gallery":{"Name":{"full_link":"http://example.com/full-image.png","thumb_link":"http://example.com/thumb-image.png","descr":"这是一个描述"}},"links":{"创造狮":{"link":"http://chuangzaoshi.com/","avatar":"/images/favatar/chuangzaoshi-logo.png","desc":"为创意工作者而设计"},"腾讯设计导航":{"link":"http://idesign.qq.com/","avatar":"/images/favatar/idesign-logo.png","desc":"网罗全网高逼格的设计站点"}}}},"excerpt":"","more":"<h1 id=\"正则表达式的使用\"><a href=\"#正则表达式的使用\" class=\"headerlink\" title=\"正则表达式的使用\"></a>正则表达式的使用</h1><blockquote>\n<p>本文整理了一些常用的正则表达式匹配符，使用的示例代码为js编写，参考文章 <a href=\"https://tool.oschina.net/uploads/apidocs/jquery/regexp.html\" target=\"_blank\" rel=\"noopener\">正则表达式手册</a>，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expression\" target=\"_blank\" rel=\"noopener\">MDN文档-正则表达式</a></p>\n</blockquote>\n<h2 id=\"正则表达式规则类型\"><a href=\"#正则表达式规则类型\" class=\"headerlink\" title=\"正则表达式规则类型\"></a>正则表达式规则类型</h2><ul>\n<li><p>断言 </p>\n<blockquote>\n<p>表示一个匹配在某些条件发生</p>\n</blockquote>\n</li>\n<li><p>边界</p>\n<blockquote>\n<p>表示行和单词的的开始和结尾，如：<code>^ 匹配起始位置</code> ，<code>$ 匹配结束位置</code></p>\n</blockquote>\n</li>\n<li><p>字符类别</p>\n<blockquote>\n<p>区分不同类型的字符，如： <code>\\D 匹配一个非数字字符</code>，<code>\\d 匹配一个数字字符</code></p>\n</blockquote>\n</li>\n<li><p>组合范围</p>\n<blockquote>\n<p>表示表达式的分组和范围，如: <code>[a-e0-4] 匹配a-e之间的字符以及0-4的数字</code></p>\n</blockquote>\n</li>\n<li><p>量词</p>\n<blockquote>\n<p>表示匹配的字符或表达式的数量， 如： <code>a{3,4} 匹配3个或4个字母a的字符</code></p>\n</blockquote>\n</li>\n<li><p>unicode属性转义</p>\n<blockquote>\n<p>基于unicode字符属性区分字符</p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"常用的匹配规则\"><a href=\"#常用的匹配规则\" class=\"headerlink\" title=\"常用的匹配规则\"></a>常用的匹配规则</h2><blockquote>\n<p>以下列的是常用匹配规则，完整的匹配规则可参考：<a href=\"https://tool.oschina.net/uploads/apidocs/jquery/regexp.html\" target=\"_blank\" rel=\"noopener\">正则表达式手册</a></p>\n</blockquote>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> </span><br><span class=\"line\"> \\S     : 匹配任意非空字符</span><br><span class=\"line\"> .      : 匹配 \\n 之外的任何字符</span><br><span class=\"line\"> \\D     : 匹配一个非数字字符，等价于[^0-9]</span><br><span class=\"line\"> \\d     : 匹配个数字字符，等价于[0-9]</span><br><span class=\"line\"> [0-9]  : 匹配一个数字字符</span><br><span class=\"line\"> ^      : 限定字符串的起始字符， 例如  ^a 限定匹配的字符串必须以 a 开头</span><br><span class=\"line\"> $      : 限定字符串的结束字符，例如 b$ 字符串必须以b结束</span><br><span class=\"line\">\\w      : 匹配包括下划线的任何单词或数字，等价于[A-Za-z0-9_]</span><br><span class=\"line\">&#123;&#125;      : 匹配指定次数，eg: a&#123;3,6&#125;，最低匹配三个字符a，最高匹配6个字符a</span><br><span class=\"line\">()      : 优先匹配括号中的内容</span><br><span class=\"line\">+       : 至少匹配一次，等价于&#123;1,&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"全局匹配模式\"><a href=\"#全局匹配模式\" class=\"headerlink\" title=\"全局匹配模式\"></a>全局匹配模式</h2><blockquote>\n<p>全局匹配模式即在匹配到第一个字符串后，会继续往后检索，直到检索完所有内容</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const str &#x3D; &#39;123bb456bb789&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 输出 [ &#39;bb&#39;, &#39;bb&#39; ]</span><br><span class=\"line\">console.log(str.match(&#x2F;bb&#x2F;g)) </span><br><span class=\"line\"></span><br><span class=\"line\">const reg &#x3D; new RegExp(&quot;bb&quot;,&quot;g&quot;)</span><br><span class=\"line\">&#x2F;&#x2F; 输出 [ &#39;bb&#39;, index: 3, input: &#39;123bb4567bb89&#39;, groups: undefined ]</span><br><span class=\"line\">console.log(reg.exec(str))</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"js-字符串支持正则表达式的方法\"><a href=\"#js-字符串支持正则表达式的方法\" class=\"headerlink\" title=\"js 字符串支持正则表达式的方法\"></a>js 字符串支持正则表达式的方法</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const str &#x3D; &#39;123bb456d789&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; search(reg): 检索与reg相匹配的值</span><br><span class=\"line\">&#x2F;&#x2F; 输出： 3</span><br><span class=\"line\">console.log(str.search(&#x2F;b&#123;2&#125;&#x2F;))  </span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; match(reg): 找到一个或多个reg匹配的值</span><br><span class=\"line\">&#x2F;&#x2F; 输出： [ &#39;456&#39;, index: 5, input: &#39;123bb456d789&#39;, groups: undefined ]</span><br><span class=\"line\">console.log(str.match(&#x2F;[4-6]&#123;3&#125;&#x2F;))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; replace(reg, str): 替换与reg匹配的值为str的内容</span><br><span class=\"line\">&#x2F;&#x2F; 输出： 123bb4561119</span><br><span class=\"line\">console.log(str.replace(&#x2F;d[7-8]&#123;2&#125;&#x2F;, &#39;111&#39;))</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; split(reg, number): 把字符依照reg匹配规则分割，并且返回一个number长度的数组</span><br><span class=\"line\">&#x2F;&#x2F; 输出： [ &#39;123bb&#39;, &#39;d789&#39; ]</span><br><span class=\"line\">console.log(str.split(&#x2F;456&#x2F;, 2))</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"js-RegExp对象\"><a href=\"#js-RegExp对象\" class=\"headerlink\" title=\"js RegExp对象\"></a>js RegExp对象</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">complie: 编译正则表达式。</span><br><span class=\"line\">exec: 检索字符串中指定的值。返回找到的值，并确定其位置。</span><br><span class=\"line\">test: 检索字符串中指定的值。返回 true 或 false。</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"常用的正则表达式\"><a href=\"#常用的正则表达式\" class=\"headerlink\" title=\"常用的正则表达式\"></a>常用的正则表达式</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 获取网络链接中的某个参数值</span><br><span class=\"line\">&#x2F;&#x2F; gcGetUrlParam（url,params） &#123;</span><br><span class=\"line\">&#x2F;&#x2F;     var reg &#x3D; new RegExp(&quot;(^|&amp;)&quot; + params + &quot;&#x3D;([^&amp;]*)(&amp;|$)&quot;);</span><br><span class=\"line\">&#x2F;&#x2F;     var result &#x3D; url.search.substr(1).match(reg);</span><br><span class=\"line\">&#x2F;&#x2F;     if (result &amp;&amp; result[2]) &#123;</span><br><span class=\"line\">&#x2F;&#x2F;         return result[2];</span><br><span class=\"line\">&#x2F;&#x2F;     &#125;</span><br><span class=\"line\">&#x2F;&#x2F;     return false;</span><br><span class=\"line\">&#x2F;&#x2F; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 裁剪xx到xx之间的任意内容</span><br><span class=\"line\">&#x2F;&#x2F; let url &#x3D; https:&#x2F;&#x2F;www.v.qq.com&#x2F;?vid&#x3D;adfadsfds2243&amp;test&#x3D;true</span><br><span class=\"line\">&#x2F;&#x2F; let reg &#x3D; &#x2F;vid&#x3D;(.*?)&amp;&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; let vid &#x3D; url.match(reg)[1]</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 验证手机号码正则</span><br><span class=\"line\">&#x2F;&#x2F; let reg &#x3D; &#x2F;^1([3-8])(\\d&#123;9&#125;)$&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; let test &#x3D; &#39;13160694978&#39;</span><br><span class=\"line\">&#x2F;&#x2F; let a &#x3D; reg.exec(test)</span><br><span class=\"line\">&#x2F;&#x2F; console.log(a)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 验证邮箱的正则</span><br><span class=\"line\">&#x2F;&#x2F; let reg &#x3D; &#x2F;^((\\S|_|-)&#123;2,10&#125;)@(\\S&#123;2,6&#125;)(.com)$&#x2F;</span><br><span class=\"line\">&#x2F;&#x2F; let test &#x3D; &#39;some_one@gmail.com&#39;</span><br><span class=\"line\">&#x2F;&#x2F; let a &#x3D; reg.exec(test)</span><br><span class=\"line\">&#x2F;&#x2F; console.log(a)</span><br><span class=\"line\"></span><br><span class=\"line\">&#x2F;&#x2F; 匹配任意重复字符</span><br><span class=\"line\">&#x2F;&#x2F; var s &#x3D; &#39;aaabccc11fdsaa&#39;;</span><br><span class=\"line\">&#x2F;&#x2F; var reg &#x3D; &#x2F;(.)\\1+&#x2F;g;</span><br><span class=\"line\">&#x2F;&#x2F; console.log(s.match(reg)); &#x2F;&#x2F;[&quot;aaa&quot;, &quot;ccc&quot;, &quot;11&quot;]</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ck84au18k0001m1rh9djj2l13","category_id":"ck84au18p0004m1rhaz3v0mky","_id":"ck84au18x000bm1rheetf6fsu"},{"post_id":"ck84au18n0003m1rhft6r2d3d","category_id":"ck84au18u0009m1rhh6bhbobv","_id":"ck84au191000gm1rh3bmpbpdw"},{"post_id":"ck84au18r0007m1rh1wrt2epk","category_id":"ck84au18x000cm1rh9u7961l9","_id":"ck84au192000im1rhhfct23mj"}],"PostTag":[{"post_id":"ck84au18k0001m1rh9djj2l13","tag_id":"ck84au18q0005m1rh9qvm77ij","_id":"ck84au190000em1rhd67d3qa1"},{"post_id":"ck84au18k0001m1rh9djj2l13","tag_id":"ck84au18u000am1rh4q1vf3x7","_id":"ck84au191000fm1rhbf0y85vu"},{"post_id":"ck84au18r0007m1rh1wrt2epk","tag_id":"ck84au18z000dm1rhf06d88ck","_id":"ck84au191000hm1rhdueqhfwp"}],"Tag":[{"name":"github","_id":"ck84au18q0005m1rh9qvm77ij"},{"name":"效率","_id":"ck84au18u000am1rh4q1vf3x7"},{"name":"基础","_id":"ck84au18z000dm1rhf06d88ck"}]}}